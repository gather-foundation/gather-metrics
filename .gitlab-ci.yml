image: python:3.12-alpine

stages:
  - test
  - deploy

################################################################################################################################
#                                                        TEST                                                                  #
################################################################################################################################

test:
  stage: test
  script:
    - pip install -r requirements.txt
    - pytest --cov-report=xml --cov=src
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^feature.*$/ || $CI_COMMIT_BRANCH =~ /^fix.*$/"
  cache:
    paths:
      - ~/.cache/pip
  artifacts:
    paths:
      - coverage.xml
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

################################################################################################################################
#                                                        DEPLOY - PROD                                                         #
################################################################################################################################

deploy-aws:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "development"'
  script:
    - /busybox/echo "{\"credHelpers\":{\"${DOCKER_REGISTRY_AWS}\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${DOCKER_REGISTRY_AWS}/${DOCKER_IMAGE_AWS}:latest"
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
