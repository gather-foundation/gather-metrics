# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # Check trailing withespace
      - id: trailing-whitespace
        name: "Check Trailing whitespace in the code?"
      # Check end of files
      - id: end-of-file-fixer
        name: "Check: Wrong end-of-files?"
      # Check json syntax
      - id: check-json
        name: "Check: JSON syntax errors?"
      # Check yaml syntax
      - id: check-yaml
        name: "Check: YAML syntax errors?"
      # Check for large file commited
      - id: check-added-large-files
        name: "Check: Large files commited?"
        args: ['--maxkb=10000']
      # Check for private keys commited
      - id: detect-private-key
        name: "Check: Private keys commited?"
      # Check for AWS credentials
      - id: detect-aws-credentials
        args: ["--allow-missing-credentials"]
        name: "Check: AWS credentials commited?"
      # Protect commit to main and development
      - id: no-commit-to-branch
        name: "Check: Commiting onto protected branches?"
        args: ["--branch", "main", "--branch", "development"]

  # Check for leaked secrets in commited files
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.16.2
    hooks:
      - id: gitleaks
        name: "Check: Hardcoded secrets commited?"
        args: ["--staged", "--source", ".", "--verbose"]

  # Format Python code to follow a consistent style
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        name: "Format Python code style"

  # Lint JS/TS files (example)
  # NOTE: For this hook to work, first complete the eslint setup for your project (https://eslint.org/docs/latest/use/getting-started)
  # - repo: https://github.com/pre-commit/mirrors-eslint
  #   rev: v8.37.0
  #   hooks:
  #     - id: eslint
  #       additional_dependencies:
  #         - eslint@4.15.0
  #         - eslint-config-google@0.7.1
  #         - eslint-loader@1.6.1
  #         - eslint-plugin-react@6.10.3
  #         - babel-eslint@6.1.2
  #       files: \.[jt]sx?$ # *.js, *.jsx, *.ts and *.tsx
  #       types: [file]

  # Format JS/HTML/CSS/JSON/YAML code to follow a consistent style
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.6
    hooks:
      - id: prettier
        name: "Format JS/HTML/CSS/JSON/YAML code style"
        types_or: [javascript, json, css, scss, html, yaml]
        args: ["--write"]

  # Check dockerfile standard
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.1-beta
    hooks:
      - id: hadolint
        name: "Check: Dockerfile linting errors?"
        stages: [commit]
        language: system
        types: ["dockerfile"]

  # Check Gitlab CI file syntax
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.22.0
    hooks:
      - id: check-gitlab-ci
        name: "Check: Gitlab CI syntax errors?"

  # Check commitizen messages (set to run manually)
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v2.42.1
    hooks:
      - id: commitizen
        name: "Check: message follows commit rules?"
      - id: commitizen-branch
        name: "Check: Branch commit messages follow commit rules?"
        stages: [manual]
